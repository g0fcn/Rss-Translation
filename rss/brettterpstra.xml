<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>BrettTerpstra.com - Brett Terpstra 的疯狂科学</title>
    <link>https://brettterpstra.com/</link>
    <description></description>
    <lastBuildDate>Sat, 15 Jun 2024 01:07:18 GMT</lastBuildDate>
    <item>
      <title>Markdown HTML API</title>
      <link>https://brett.trpstra.net/link/535/16714717/a-markdown-lorem-ipsum-api</link>
      <description><![CDATA[ Markdown Lorem Ipsum, API, Text Blaze, MD-Lipsum, BrettTerpstra.com

关于构建新的Markdown Lorem Ipsum API用于生成Markdown Lorem Ipsum。作者解释了构建API的原因，提及使用Text Blaze应用以及制作脚本片段的需求。介绍了MD-Lipsum的用途和如何使用API，包括从命令行和Text Blaze使用的示例。提供了对应的curl命令和Text Blaze代码。文中还介绍了网站支持的方式和版权声明。
总结:文章介绍了构建Markdown Lorem Ipsum API的目的，以及如何使用该API生成Markdown Lorem Ipsum。提供了命令行和Text Blaze使用示例，同时提及网站支持方式和版权声明。 
I built a new little API for you. It generates Markdown Lorem Ipsum. First, a little background.
Why?
As I’ve mentioned elsewhere, I’ve been playing with Text Blaze, a cool new app that might eventually replace TextExpander for me. One of the major things missing from Text Blaze, though, is script snippets, which I make use of a lot in TextExpander. What it does offer, though, is a command for fetching a REST API and processing the result. A lot of my script snippets are doing just that, so those are actually more convenient to build in Text Blaze. For the ones that need extra handling, I’ve just been creating web endpoints that run my scripts for me.

When you go to the Text Blaze home page it looks like it’s just a Chrome extension. You have to go all the way to the bottom of the page to find the Mac app (beta).

One such snippet I wanted back was my random Markdown generator, which I use frequently to test out styles for things like Marked, nvUltra, or MultiMarkdown Composer. There’s an existing API called Lorem Markdownum, but it doesn’t generate enough of the syntax consistently to be good for testing themes. So I built my own.
MD-Lipsum
“MD-Lipsum” uses Loripsum.net to generate a full set of HTML markup with random text, and then converts that HTML to basic Markdown. No tables, unfortunately, but it outputs a complete set of standard Markdown elements, including bold/italics, ordered and unordered lists, headers, block quotes, code blocks (fenced), and definition lists (MultiMarkdown syntax).
Usage
To use the API, just point to https://brettterpstra.com/md-lipsum/api/1. You can add /long or /short but it has minimal effect (a shortcoming of the loripsum.net API, I think). It just returns plain text, much like the TitleCase API I made a while back.
You can use it from the command line like:
curl &#39;https://brettterpstra.com/md-lipsum/api/1&#39;
To use it in Text Blaze, you’d want a snippet like:
{urlload: https://brettterpstra.com/md-lipsum/api/1; done=(res) -&gt; [&quot;response&quot;: res]; headers=; body=; method=GET}{=response}
There’s a little page here but it just tells you what’s in this post!
Like or share this post on Mastodon or Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16714717/a-markdown-lorem-ipsum-api</guid>
      <pubDate>Fri, 14 Jun 2024 17:54:00 GMT</pubDate>
    </item>
    <item>
      <title>2024 年 6 月 12 日网络游览</title>
      <link>https://brett.trpstra.net/link/535/16712243/web-excursions-for-june-12-2024</link>
      <description><![CDATA[ Bartender, acquisition, telemetry, git diffs, Climate anxiety

总结:一家公司最近收购了Bartender，可能会影响其未来；有一款免费的项目可以取代Bartender，被认为是一个有潜力的替代品；在终端中有一个项目可以让git diffs看起来更漂亮；针对气候焦虑的人们，有一些带来希望的消息；在Obsidian中有一些很酷的整合，比如可以将选定的文本保存到指定文件或每日笔记页面。 








jordanbaird/Ice: Powerful menu bar manager for macOS
There’s some question about the future of Bartender after a recent acquisition (and some concerns about new telemetry). This project looks like a solid up-and-coming replacement (and free).
darrenburns/dunk: Prettier git diffs in the terminal 🎨


Prettier git diffs in the terminal


An end to the climate emergency is in our grasp
Climate anxiety keeping you awake? Here’s some hopeful news.
Obsidian — PopClip Extensions
In the vein of cool Obsidian integrations, here’s one for PopClip that can save selected text to a specified file or to the Daily Note page. There’s a similar one for nvUltra in my PopClip Extensions.

Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16712243/web-excursions-for-june-12-2024</guid>
      <pubDate>Wed, 12 Jun 2024 18:12:00 GMT</pubDate>
    </item>
    <item>
      <title>第 27 版开发者国家调查</title>
      <link>https://brett.trpstra.net/link/535/16705600/the-developer-nation-survey-27th-edition</link>
      <description><![CDATA[ survey, prizes, global, developers, tools


在7月9日之前填写全球开发者调查，有机会赢取丰厚奖品，包括GoPro Hero12 Black、笔记本屏幕扩展器14英寸、三星T7 Shield SSD 1TB、树莓派5、AeroPress咖啡机、Udemy和亚马逊礼品卡等。调查涵盖13个领域，针对所有开发者和无代码软件创建者开放，分享对流行工具和平台的喜好和不满意，对生态系统产生影响。填写问题越多，赢取上述酷炫奖品的机会越多。填写后将获得免费编码资源、优惠券和学习材料的&quot;礼品袋&quot;，支持您的职业发展。总结: 在7月9日之前填写全球开发者调查，有机会赢取丰厚奖品，分享您对工具和平台的看法，对生态系统做出影响，并获得成长支持。 









The 27th Developer Nation Survey is open until July 9th. Take the survey and get entered in a drawing for prizes, including a GoPro Hero12 Black, Laptop Screen Extender 14”, Samsung T7 Shield SSD 1TB, Raspberry Pi 5, AeroPress Coffee Maker, Udemy &amp; Amazon gift cards, Developer Nation Swag and much more! Developer Nation community members are also eligible for an iPad Mini, Amazon gift cards and more.
This is a global developer survey covering 13 areas, including: Web,
Mobile, Desktop, Cloud, Industrial IoT, Consumer Electronics, Embedded
software, AR &amp; VR, Apps/extensions for 3rd-party ecosystems, Games,
Machine Learning &amp; AI, and Data science. It’s open to all developers and
no-code software creators. Share what you like and dislike about popular tools and platforms and make an impact on the ecosystem.
As a thank you you’ll get a “goody bag” with free coding resources,
vouchers and learning material to support your career growth. Also, the
more questions you answer the more chances you get to win the cool
prizes listed above.
Take the survey before July 9th!
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16705600/the-developer-nation-survey-27th-edition</guid>
      <pubDate>Wed, 05 Jun 2024 16:25:00 GMT</pubDate>
    </item>
    <item>
      <title>在 Firefox 中添加自定义搜索快捷方式</title>
      <link>https://brett.trpstra.net/link/535/16701010/adding-custom-search-shortcuts-in-firefox</link>
      <description><![CDATA[ firefox, custom search, keyword, bookmark, search

总结：本文介绍了在Firefox浏览器中如何添加自定义搜索快捷方式，通过设置关键词和书签来实现在浏览器地址栏中快速搜索任意网站。用户只需在地址栏输入设置的关键词加上搜索词即可直接加载搜索结果页面，避免繁琐的进入网站、点击搜索以及输入搜索词的步骤。方法包括在目标网站进行搜索、添加书签、编辑书签URL以及设置关键词等步骤。这种自定义搜索方式适用于多数浏览器，方便用户快速获取所需信息。 
This might not be news to most people, but I thought I’d point it out for any Firefox users that don’t know about it: you can add a custom search shortcut for any site, allowing you to use a short keyword followed by search terms and execute the search without going to the site, clicking search, and entering terms.
To add a custom search:

Go to the site you want to search and use its search field to run any search.
On the results page, add a bookmark. You can edit the bookmark title to a generic &lt;SITE NAME&gt; search in this step or in step 4.
Open up the Bookmarks sidebar (⌘B) (or open the Bookmarks manager with ⌥⌘O) and locate the new bookmark. Right click it and choose Edit Bookmark.
Change the search term in the URL to %s. E.g., if you searched for frog, find frog in the URL and replace it.
Add a short “keyword” and edit the title to a generic “X Search” if you didn’t already. The keyword is the short text you’ll use to access the search. It can be as short as one character.
Save the edit.

Now you can just focus the URL bar (⌘L), type the keyword followed by a space and whatever search terms you want to use. The search page will be loaded directly with the results!
YouTube Video
Hope that’s useful to some people. The same thing can be done in most browsers, I just happen to be using mostly Firefox these days. Feel free to add tips for your browser of choice in the comments.
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16701010/adding-custom-search-shortcuts-in-firefox</guid>
      <pubDate>Sun, 02 Jun 2024 20:01:00 GMT</pubDate>
    </item>
    <item>
      <title>我应该在 Conductor 中用过滤器</title>
      <link>https://brett.trpstra.net/link/535/16693490/man-i-should-have-started-conductor-with-filters</link>
      <description><![CDATA[ YAML文件, 配置，插入TOC, 文件插入, 代码块插入

总结:
本文介绍了如何通过在YAML配置文件中添加一些新的过滤器来方便地进行配置，如插入表格目录、在内容开头或结尾插入文件、插入原始HTML或代码块等。通过这些过滤器，可以实现在文档中插入目录、文件、原始HTML或代码块的功能。插入的文件可以是绝对路径，也可以存储在指定路径并以文件名引用。这些过滤器使得通常需要使用脚本来完成的任务变得简单，只需一行配置即可。适用于生成PDF、HTML或Markdown文档。最后介绍了如何使用新的insertScript()过滤器添加Mermaid或自定义的MathJax实现。文章提供了更多详细信息。 
I added a few more (obvious) filters to Conductor this morning. I really should have started here, it makes configuration so convenient and alleviates the need for about 50% of what you would do with scripting. Now you can do it all from one YAML file.
The new filters are:



insertTOC(max, after)
insert TOC (max=max levels, after=start, *h1, or h2)


prepend/appendFile(path)
insert a file as Markdown at beginning or end of content


prepend/appendRaw(path)
insert a file as raw HTML at beginning or end of content


prepend/appendCode(path)
insert a file as a code block at beginning or end of content



These allow you to insert a table of contents and append or prepend files, raw HTML, or code blocks.
Inserted files can be absolute paths or you can store templates in ~/.config/conductor/files and just reference them by filename. Perfect for adding things like bios and disclaimers to your documents before outputing them (as PDF, HTML, or even as a new Markdown document).
The table of contents can be inserted at the top (“start” or “top”) or after the first h1 or h2 in the document.
If you use insertTOC(3, h1) after an insertTitle in a sequence, you’d get a title inserted from metadata first, then a TOC inserted after it. (Then use the new insertScript() filter to add Mermaid or a custom MathJax implementation. Sky’s the limit, kind of.)
These filters make some of the more basic tasks you’d usually perform with a Custom Processor script as easy as one line in a config file.
Full details on the project page.
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16693490/man-i-should-have-started-conductor-with-filters</guid>
      <pubDate>Sat, 25 May 2024 16:42:00 GMT</pubDate>
    </item>
    <item>
      <title>我不敢相信我忘记了这个导体滤波器</title>
      <link>https://brett.trpstra.net/link/535/16693412/i-cant-believe-i-forgot-this-conductor-filter</link>
      <description><![CDATA[ insertScript, insertTitle, JavaScript, config, BrettTerpstra

JavaScript中新增了insertScript过滤器，可以插入JS脚本；insertTitle过滤器可提取标题并插入内容中。通过配置文件实现自动化操作，支持自定义路径和脚本。提高了使用便捷性和灵活性，增强了功能性。文章介绍了这些新增功能，并希望读者提供更多有用建议。总结:JavaScript功能扩展，配置文件实现自动化操作，提高使用便捷性和灵活性。 
So yesterday I announced a new feature in Conductor called Filters. Little built-in commands for performing simple tasks without having to write whole scripts for them. In the process of writing the feature, I forgot what might be the most useful function of all: injecting JavaScripts.
So I’ve added insertScript(path) as a filter. You can give it a full path to a JavaScript file, or you can create a directory at ~/.config/conductor/javascript, add the file there, and then just reference it by name like filter: insertScript(mermaid) (the .js is added automatically if needed). You can insert multiple scripts at once by separating the paths with commas, e.g. insertScript(blog,mermaid).
I also added an insertTitle filter that will attempt to pull a title out of metadata (YAML or MMD), and failing that use the filename, converting a slug into a titlecased title (e.g. 2024-05-24-my-blog-post.md becomes My Blog Post), and insert it as an H1 at the beginning of the content (after any front matter/metadata).
An example config for using this (assuming the scripts blog.js and mermaid.js exist in the above directory) would look like:
tracks:
  - condition: phase is pre
    tracks:
    - title: Blog post preprocess
      condition: path contains _post AND has yaml
      sequence:
        - filter: setStyle(BrettTerpstra.com)
        - filter: addTitle
        - filter: insertScript(blog,mermaid)
That config would require no scripting at all. The style would be set, an h1 title would be added, and two scripts would be injected before running through the default Marked processor.
If you think of any more that would be useful, please let me know!
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16693412/i-cant-believe-i-forgot-this-conductor-filter</guid>
      <pubDate>Sat, 25 May 2024 13:18:00 GMT</pubDate>
    </item>
    <item>
      <title>导体滤波器简化基本操作</title>
      <link>https://brett.trpstra.net/link/535/16693021/conductor-filters-simplify-basic-operations</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16693021/conductor-filters-simplify-basic-operations</guid>
      <pubDate>Fri, 24 May 2024 18:37:00 GMT</pubDate>
    </item>
    <item>
      <title>标记 2 和黑曜石</title>
      <link>https://brett.trpstra.net/link/535/16684070/marked-2-and-obsidian</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16684070/marked-2-and-obsidian</guid>
      <pubDate>Thu, 16 May 2024 17:56:00 GMT</pubDate>
    </item>
    <item>
      <title>WriteMapper - 使用思维导图进行写作</title>
      <link>https://brett.trpstra.net/link/535/16671800/writemapper-writing-with-mind-maps</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16671800/writemapper-writing-with-mind-maps</guid>
      <pubDate>Thu, 02 May 2024 20:13:00 GMT</pubDate>
    </item>
    <item>
      <title>Conductor 修复和改进</title>
      <link>https://brett.trpstra.net/link/535/16667786/conductor-fixes-and-improvements</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16667786/conductor-fixes-and-improvements</guid>
      <pubDate>Mon, 29 Apr 2024 17:00:00 GMT</pubDate>
    </item>
    <item>
      <title>后 iThoughts 时代</title>
      <link>https://brett.trpstra.net/link/535/16666804/life-after-ithoughts</link>
      <description><![CDATA[ MindNode, iThoughts, sunsetting, Obsidian, Curio

总结:
iThoughts宣布即将停用，作者转向使用MindNode。MindNode拥有精美界面、活跃开发、支持Mac和iOS版本，能够打开iThoughts文件，导入Markdown文件，生成任务列表等功能。此外，Obsidian插件也能提供一定的思维导图功能，但相比MindNode功能有限。值得注意的是Curio内置的思维导图也是不错的选择。 






So a lot of us are wondering what to do now that Toketaware has announced the sunsetting of the iThoughts mind mapping app for Mac and iOS. It’s very sad to see it go, but I expect the current version to continue working for a few years to come. That said, I tend to favor software that has at least somewhat of a future. So I’ve been testing the waters with some other contenders. The short story is I’m moving over to MindNode.
Why MindNode?
I’ve always appreciated MindNode (and even added support for it to Marked), but there were some things that made me prefer iThoughts over MindNode. After testing the latest version of MindNode, I can no longer remember what those things were. Probably the filtering and advanced searching in iThoughts, but for 90% of my mind map purposes, it looks like MindNode will do just fine. I think the last time I made the comparison, MindNode was lacking some of the features it has these days.
I’m not going into nearly the depth that Allison Sheridan did over on Podfeet with her mind map comparison, but I’ll list some of the pros of MindNode for my purposes:

Looks great
Actively developed
Mac and iOS versions
Opens iThoughts (.itmz) files, so I don’t have to fret about losing old mind maps
Imports Markdown files
Can create tasks from nodes (can’t do much with them other than check them off, but it’s handy for packing lists)
Exports Markdown and OPML, among other formats
Works with Marked (File-&gt;Advanced-&gt;Preview in Marked)
Good keyboard navigation with some customization options
Quick entry from tool bar
It’s on Setapp

Other options
If you’re an Obsidian user, there are some mind mapping plugins available. The “Enhancing Mind Maps” plugin is a decent option if you’re in Obsidian all the time anyway:
Pros:

Built into obsidian
Basic keyboard navigation
Transparent layer over plain Markdown files, easily portable and future-proof
Works great with Marked using the obsidian-md-filter processor (via Conductor!), and you can easily connect the two with my plugin (which is still waiting for acceptance into the Community Plugins…)

Cons:

Lacks a ton of features compared to MindNode

I would also point out that the mind mapping built into Curio is pretty good, and has the benefit of fitting into the crazy cool integrations that Curio provides, linking to other notes and objects, and fitting into an overall project management system.
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16666804/life-after-ithoughts</guid>
      <pubDate>Sun, 28 Apr 2024 22:35:00 GMT</pubDate>
    </item>
    <item>
      <title>引入标记导体</title>
      <link>https://brett.trpstra.net/link/535/16664804/introducing-the-marked-conductor</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16664804/introducing-the-marked-conductor</guid>
      <pubDate>Thu, 25 Apr 2024 18:27:00 GMT</pubDate>
    </item>
    <item>
      <title>2024 年 4 月 22 日网络游览</title>
      <link>https://brett.trpstra.net/link/535/16657056/web-excursions-for-april-22-2024</link>
      <description><![CDATA[ Google Cemetery, figlet/toilet ascii art, BetterTouchTool MacOS automation, Marked plugin for Obsidian, NordVPN
总结:Google Cemetery提供了Google终止的产品列表，其中可能有一些你从未听说过的产品。xero提供了大量figlet/toilet ascii艺术字体。BetterTouchTool是一个可以用JavaScript进行MacOS自动化的工具。作者制作了一个适用于Obsidian的Marked插件。NordVPN不仅可以保护你的网络浏览安全，还可以让你的IP地址看起来来自任何国家。 






Web excursions brought to you in partnership with NordVPN. Secure your internet browsing effectively and affordably.

Google Graveyard - Killed by Google


Killed by Google is the Google Graveyard. A full list of dead products killed by Google in the Google Cemetery. Up-to-date and shocking in scope. I bet there are a few on here you’d never even realized were a thing.


xero/figlet-fonts
A huge collection of figlet/toilet ascii art fonts from xero.
btt.js
BetterTouchTool MacOS automation in JS. I haven’t played with this yet but it looks really fun. Let me know if you take it for a spin.
ttscoff/Marked2-obsidian
I made a Marked plugin for Obsidian. It’s my first try and I really don’t know what I’m doing, but it seems to work perfectly. Waiting for it to be included in the Community Plugins for easy install (which could have happened by the time this goes live), but you can install from the source if you’re anxious.

NordVPN secures your internet browsing, plus it can make it look to services like you’re coming from any country. Check it out today.
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16657056/web-excursions-for-april-22-2024</guid>
      <pubDate>Mon, 22 Apr 2024 16:00:00 GMT</pubDate>
    </item>
    <item>
      <title>对 nvALT 用户的恳求</title>
      <link>https://brett.trpstra.net/link/535/16655625/a-plea-to-nvalt-users</link>
      <description><![CDATA[ nvALT, end of life, modernize, Markdown files, nvUltra

nvALT已经停止更新，目前几乎无法在现代操作系统上正常运行。建议用户将存储方式转为Markdown文件，以便顺利迁移到新的笔记系统。如果笔记存储为富文本文件(RTF)，则需使用其他应用如nvUltra、The Archive或Obsidian。学习Markdown并不难，只需了解一些简单的语法规则。立即将存储方式改为纯文本文件，以免在nvALT无法运行时无法提取笔记。可能会为nvUltra编写导入器，但目前尚未实现。要获取nvUltra测试版，请通过网站联系链接发送邮件。 
I’ve said this before, but I need to keep repeating it based on the number of queries I get. nvALT is at end of life, unless someone picks up the reigns and modernizes the (open source) code base. As it stands now, nvALT barely functions on modern OSs.
Fletcher Penney and I have designed nvALT’s successor, nvUltra, to work only with a folder full of Markdown files, which is the only way I recommend using nvALT. If your nvALT files are stored as individual Markdown files, switching to nvUltra is no problem, nor is switching to any other Notational-Velocity-like system. It will even work in Obsidian. But if you store your notes as a database only, you’re screwed when nvALT stops working for you.
So please, if nvALT is still running for you, go into Preferences-&gt;Notes-&gt;Storage and change “Store and read notes on disk as” to “Plain Text Files.” If your previous storage method was database, all of your notes will be immediately written out as plain text files, safe and secure and easy to port to a new (working) notes system. The files will now be in the same folder nvALT shows in the folder selector at the top of the Notes preference pane.







nvALT is not even working well enough for me to get a full screenshot. But here is my best attempt.

If your notes are stored as Rich Text Files (RTF), you’ll need to convert them to Markdown to make use of other apps like nvUltra, The Archive, or Obsidian. If you don’t know Markdown, don’t sweat it. It’s very easy to learn and it’s really just plain text, so as long as you know how to write, you’re already kind of writing Markdown. It’s only necessary to learn any syntax if you need to do things like create bulleted/numbered lists, add bold or italics, or create links.
So, again, please immediately switch your storage method to plain text files. The nvALT database format has no easy out for people ready to switch. I may try to write an importer for nvUltra (or generally to output Markdown), but I have not done so yet.
If you want on the nvUltra beta, email me through the contact link on nvultra.com.
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16655625/a-plea-to-nvalt-users</guid>
      <pubDate>Sat, 20 Apr 2024 14:44:00 GMT</pubDate>
    </item>
    <item>
      <title>回顾我的时光……关于当时和现在博客的一些想法</title>
      <link>https://brett.trpstra.net/link/535/16642792/back-in-my-day-dot-dot-dot-some-thoughts-on-blogging-then-and-now</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16642792/back-in-my-day-dot-dot-dot-some-thoughts-on-blogging-then-and-now</guid>
      <pubDate>Fri, 05 Apr 2024 20:46:00 GMT</pubDate>
    </item>
    </channel>
</rss>
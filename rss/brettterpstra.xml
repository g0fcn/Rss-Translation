<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>BrettTerpstra.com - Brett Terpstra 的疯狂科学</title>
    <link>https://brettterpstra.com/</link>
    <description></description>
    <lastBuildDate>Sat, 25 May 2024 15:14:54 GMT</lastBuildDate>
    <item>
      <title>我不敢相信我忘记了这个导体过滤器</title>
      <link>https://brett.trpstra.net/link/535/16693412/i-cant-believe-i-forgot-this-conductor-filter</link>
      <description><![CDATA[ insertScript, insertTitle, JavaScript, config, BrettTerpstra

JavaScript中新增了insertScript过滤器，可以插入JS脚本；insertTitle过滤器可提取标题并插入内容中。通过配置文件实现自动化操作，支持自定义路径和脚本。提高了使用便捷性和灵活性，增强了功能性。文章介绍了这些新增功能，并希望读者提供更多有用建议。总结:JavaScript功能扩展，配置文件实现自动化操作，提高使用便捷性和灵活性。 
So yesterday I announced a new feature in Conductor called Filters. Little built-in commands for performing simple tasks without having to write whole scripts for them. In the process of writing the feature, I forgot what might be the most useful function of all: injecting JavaScripts.
So I’ve added insertScript(path) as a filter. You can give it a full path to a JavaScript file, or you can create a directory at ~/.config/conductor/javascript, add the file there, and then just reference it by name like filter: insertScript(mermaid) (the .js is added automatically if needed). You can insert multiple scripts at once by separating the paths with commas, e.g. insertScript(blog,mermaid).
I also added an insertTitle filter that will attempt to pull a title out of metadata (YAML or MMD), and failing that use the filename, converting a slug into a titlecased title (e.g. 2024-05-24-my-blog-post.md becomes My Blog Post), and insert it as an H1 at the beginning of the content (after any front matter/metadata).
An example config for using this (assuming the scripts blog.js and mermaid.js exist in the above directory) would look like:
tracks:
  - condition: phase is pre
    tracks:
    - title: Blog post preprocess
      condition: path contains _post AND has yaml
      sequence:
        - filter: setStyle(BrettTerpstra.com)
        - filter: addTitle
        - filter: insertScript(blog,mermaid)
That config would require no scripting at all. The style would be set, an h1 title would be added, and two scripts would be injected before running through the default Marked processor.
If you think of any more that would be useful, please let me know!
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16693412/i-cant-believe-i-forgot-this-conductor-filter</guid>
      <pubDate>Sat, 25 May 2024 13:18:00 GMT</pubDate>
    </item>
    <item>
      <title>导体滤波器简化基本操作</title>
      <link>https://brett.trpstra.net/link/535/16693021/conductor-filters-simplify-basic-operations</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16693021/conductor-filters-simplify-basic-operations</guid>
      <pubDate>Fri, 24 May 2024 18:37:00 GMT</pubDate>
    </item>
    <item>
      <title>标记 2 和黑曜石</title>
      <link>https://brett.trpstra.net/link/535/16684070/marked-2-and-obsidian</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16684070/marked-2-and-obsidian</guid>
      <pubDate>Thu, 16 May 2024 17:56:00 GMT</pubDate>
    </item>
    <item>
      <title>WriteMapper - 用思维导图写作</title>
      <link>https://brett.trpstra.net/link/535/16671800/writemapper-writing-with-mind-maps</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16671800/writemapper-writing-with-mind-maps</guid>
      <pubDate>Thu, 02 May 2024 20:13:00 GMT</pubDate>
    </item>
    <item>
      <title>导体修复和改进</title>
      <link>https://brett.trpstra.net/link/535/16667786/conductor-fixes-and-improvements</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16667786/conductor-fixes-and-improvements</guid>
      <pubDate>Mon, 29 Apr 2024 17:00:00 GMT</pubDate>
    </item>
    <item>
      <title>iThoughts 之后的生活</title>
      <link>https://brett.trpstra.net/link/535/16666804/life-after-ithoughts</link>
      <description><![CDATA[ MindNode, iThoughts, sunsetting, Obsidian, Curio

总结:
iThoughts宣布即将停用，作者转向使用MindNode。MindNode拥有精美界面、活跃开发、支持Mac和iOS版本，能够打开iThoughts文件，导入Markdown文件，生成任务列表等功能。此外，Obsidian插件也能提供一定的思维导图功能，但相比MindNode功能有限。值得注意的是Curio内置的思维导图也是不错的选择。 






So a lot of us are wondering what to do now that Toketaware has announced the sunsetting of the iThoughts mind mapping app for Mac and iOS. It’s very sad to see it go, but I expect the current version to continue working for a few years to come. That said, I tend to favor software that has at least somewhat of a future. So I’ve been testing the waters with some other contenders. The short story is I’m moving over to MindNode.
Why MindNode?
I’ve always appreciated MindNode (and even added support for it to Marked), but there were some things that made me prefer iThoughts over MindNode. After testing the latest version of MindNode, I can no longer remember what those things were. Probably the filtering and advanced searching in iThoughts, but for 90% of my mind map purposes, it looks like MindNode will do just fine. I think the last time I made the comparison, MindNode was lacking some of the features it has these days.
I’m not going into nearly the depth that Allison Sheridan did over on Podfeet with her mind map comparison, but I’ll list some of the pros of MindNode for my purposes:

Looks great
Actively developed
Mac and iOS versions
Opens iThoughts (.itmz) files, so I don’t have to fret about losing old mind maps
Imports Markdown files
Can create tasks from nodes (can’t do much with them other than check them off, but it’s handy for packing lists)
Exports Markdown and OPML, among other formats
Works with Marked (File-&gt;Advanced-&gt;Preview in Marked)
Good keyboard navigation with some customization options
Quick entry from tool bar
It’s on Setapp

Other options
If you’re an Obsidian user, there are some mind mapping plugins available. The “Enhancing Mind Maps” plugin is a decent option if you’re in Obsidian all the time anyway:
Pros:

Built into obsidian
Basic keyboard navigation
Transparent layer over plain Markdown files, easily portable and future-proof
Works great with Marked using the obsidian-md-filter processor (via Conductor!), and you can easily connect the two with my plugin (which is still waiting for acceptance into the Community Plugins…)

Cons:

Lacks a ton of features compared to MindNode

I would also point out that the mind mapping built into Curio is pretty good, and has the benefit of fitting into the crazy cool integrations that Curio provides, linking to other notes and objects, and fitting into an overall project management system.
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16666804/life-after-ithoughts</guid>
      <pubDate>Sun, 28 Apr 2024 22:35:00 GMT</pubDate>
    </item>
    <item>
      <title>标记导体简介</title>
      <link>https://brett.trpstra.net/link/535/16664804/introducing-the-marked-conductor</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16664804/introducing-the-marked-conductor</guid>
      <pubDate>Thu, 25 Apr 2024 18:27:00 GMT</pubDate>
    </item>
    <item>
      <title>2024 年 4 月 22 日网上游览</title>
      <link>https://brett.trpstra.net/link/535/16657056/web-excursions-for-april-22-2024</link>
      <description><![CDATA[ Google Cemetery, figlet/toilet ascii art, BetterTouchTool MacOS automation, Marked plugin for Obsidian, NordVPN
总结:Google Cemetery提供了Google终止的产品列表，其中可能有一些你从未听说过的产品。xero提供了大量figlet/toilet ascii艺术字体。BetterTouchTool是一个可以用JavaScript进行MacOS自动化的工具。作者制作了一个适用于Obsidian的Marked插件。NordVPN不仅可以保护你的网络浏览安全，还可以让你的IP地址看起来来自任何国家。 






Web excursions brought to you in partnership with NordVPN. Secure your internet browsing effectively and affordably.

Google Graveyard - Killed by Google


Killed by Google is the Google Graveyard. A full list of dead products killed by Google in the Google Cemetery. Up-to-date and shocking in scope. I bet there are a few on here you’d never even realized were a thing.


xero/figlet-fonts
A huge collection of figlet/toilet ascii art fonts from xero.
btt.js
BetterTouchTool MacOS automation in JS. I haven’t played with this yet but it looks really fun. Let me know if you take it for a spin.
ttscoff/Marked2-obsidian
I made a Marked plugin for Obsidian. It’s my first try and I really don’t know what I’m doing, but it seems to work perfectly. Waiting for it to be included in the Community Plugins for easy install (which could have happened by the time this goes live), but you can install from the source if you’re anxious.

NordVPN secures your internet browsing, plus it can make it look to services like you’re coming from any country. Check it out today.
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16657056/web-excursions-for-april-22-2024</guid>
      <pubDate>Mon, 22 Apr 2024 16:00:00 GMT</pubDate>
    </item>
    <item>
      <title>对 nvALT 用户的呼吁</title>
      <link>https://brett.trpstra.net/link/535/16655625/a-plea-to-nvalt-users</link>
      <description><![CDATA[ nvALT, end of life, modernize, Markdown files, nvUltra

nvALT已经停止更新，目前几乎无法在现代操作系统上正常运行。建议用户将存储方式转为Markdown文件，以便顺利迁移到新的笔记系统。如果笔记存储为富文本文件(RTF)，则需使用其他应用如nvUltra、The Archive或Obsidian。学习Markdown并不难，只需了解一些简单的语法规则。立即将存储方式改为纯文本文件，以免在nvALT无法运行时无法提取笔记。可能会为nvUltra编写导入器，但目前尚未实现。要获取nvUltra测试版，请通过网站联系链接发送邮件。 
I’ve said this before, but I need to keep repeating it based on the number of queries I get. nvALT is at end of life, unless someone picks up the reigns and modernizes the (open source) code base. As it stands now, nvALT barely functions on modern OSs.
Fletcher Penney and I have designed nvALT’s successor, nvUltra, to work only with a folder full of Markdown files, which is the only way I recommend using nvALT. If your nvALT files are stored as individual Markdown files, switching to nvUltra is no problem, nor is switching to any other Notational-Velocity-like system. It will even work in Obsidian. But if you store your notes as a database only, you’re screwed when nvALT stops working for you.
So please, if nvALT is still running for you, go into Preferences-&gt;Notes-&gt;Storage and change “Store and read notes on disk as” to “Plain Text Files.” If your previous storage method was database, all of your notes will be immediately written out as plain text files, safe and secure and easy to port to a new (working) notes system. The files will now be in the same folder nvALT shows in the folder selector at the top of the Notes preference pane.







nvALT is not even working well enough for me to get a full screenshot. But here is my best attempt.

If your notes are stored as Rich Text Files (RTF), you’ll need to convert them to Markdown to make use of other apps like nvUltra, The Archive, or Obsidian. If you don’t know Markdown, don’t sweat it. It’s very easy to learn and it’s really just plain text, so as long as you know how to write, you’re already kind of writing Markdown. It’s only necessary to learn any syntax if you need to do things like create bulleted/numbered lists, add bold or italics, or create links.
So, again, please immediately switch your storage method to plain text files. The nvALT database format has no easy out for people ready to switch. I may try to write an importer for nvUltra (or generally to output Markdown), but I have not done so yet.
If you want on the nvUltra beta, email me through the contact link on nvultra.com.
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16655625/a-plea-to-nvalt-users</guid>
      <pubDate>Sat, 20 Apr 2024 14:44:00 GMT</pubDate>
    </item>
    <item>
      <title>回到我的时代......当时和现在写博客的一些想法</title>
      <link>https://brett.trpstra.net/link/535/16642792/back-in-my-day-dot-dot-dot-some-thoughts-on-blogging-then-and-now</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16642792/back-in-my-day-dot-dot-dot-some-thoughts-on-blogging-then-and-now</guid>
      <pubDate>Fri, 05 Apr 2024 20:46:00 GMT</pubDate>
    </item>
    <item>
      <title>CurlyQ 和自动化 JavaScript 执行</title>
      <link>https://brett.trpstra.net/link/535/16641718/curlyq-and-automated-javascript-execution</link>
      <description><![CDATA[ gem install curlyq, JavaScript execution, screenshot command, execute subcommand, web automation tool 

总结: 作者在文章中介绍了对CurlyQ工具的改进，包括添加JavaScript执行功能、改进截图命令、新增执行子命令等。通过对工具的升级，用户可以更方便地进行网页自动化操作，如保存网页截图、执行特定脚本等。这些改进将极大地提高用户的工作效率，特别适用于自动化文档生成等工作。CurlyQ的最新版本已可通过gem install curlyq进行更新或安装。 
I’ve been wanting to add JavaScript execution to CurlyQ for a while and finally got around to it.
In case you’ve missed it, CurlyQ is my command-line web automation tool for fetching, parsing, and responding to web page content, designed to be used as part of a *NIX pipeline. It can grab titles, links, metadata, and more from any web page. As part of its functionality, it can also use Firefox or Chrome to save screenshots, and that’s part of what I’ve improved.
The screenshot command now accepts a --script parameter. This can be a JavaScript string, or - to read from STDIN, or a path to a file which will be read and executed before taking a screenshot. You can also now define an element ID to wait for before taking the screenshot (or executing the script) using --id ELEMENT_ID. As long as the ID is a valid element on the page, the screenshot will trigger once that element is loaded (via HTML or dynamically), with a timeout of 10 seconds. You can also define a --wait X flag in the command to wait for a specified number of seconds after executing a script before the screenshot is taken.
Further, I’ve added a new subcommand, execute, that has the same parameters as above and simply allows you to load a page in the browser and execute a script on it. I really wanted this because it’s the easiest way to automate NiftyMenu:
curlyq execute -b chrome -s &quot;NiftyAPI.find(&#39;file/save&#39;).arrow().shoot(&#39;file-save&#39;)&quot; file:///Users/ttscoff/Desktop/Code/niftymenu/dist/MultiMarkdown-Composer.html
That command will save a screenshot of the File-&gt;Save menu item for me, allowing me to fully automate menu screenshots for any of my apps. I can have NiftyMenu generate an up-to-date view of the app’s menu bar, with styling for the current OS, and output detailed screenshots with callouts automatically. This will be a huge timesaver when it comes to documentation.
You can update/install the latest version of CurlyQ with gem install curlyq. The improvements in this post are available as of version 0.0.12. Enjoy!
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16641718/curlyq-and-automated-javascript-execution</guid>
      <pubDate>Thu, 04 Apr 2024 18:24:00 GMT</pubDate>
    </item>
    <item>
      <title>关于使用 CDN</title>
      <link>https://brett.trpstra.net/link/535/16638813/on-using-a-cdn</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16638813/on-using-a-cdn</guid>
      <pubDate>Tue, 02 Apr 2024 21:03:00 GMT</pubDate>
    </item>
    <item>
      <title>自动化 Dimspirations 工作流程</title>
      <link>https://brett.trpstra.net/link/535/16637190/automating-the-dimspirations-workflow</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16637190/automating-the-dimspirations-workflow</guid>
      <pubDate>Mon, 01 Apr 2024 19:53:00 GMT</pubDate>
    </item>
    <item>
      <title>2024 年 3 月 29 日网上游览</title>
      <link>https://brett.trpstra.net/link/535/16635234/web-excursions-for-march-29-2024</link>
      <description><![CDATA[ mac app; intention setting; Terminal trick; native macOS email client; keycap replacement
总结: 这篇文章介绍了一款简单优雅的Mac应用程序，可以帮助用户设定意图并提醒他们专注工作。还分享了一个适用于Terminal爱好者的技巧，并推荐了一款优秀的原生macOS邮件客户端。最后提到了订购了一个键帽来替换现有的定制键帽。 






Web excursions brought to you in partnership with CleanMyMac X, all the tools to speed up your Mac, in one app.

N₁₀ - Attention Management App for Mac
A simple, elegant Mac app that allows you to set an intention, define how much time you plan to put into it, and then just sit, quietly reminding you of what you want to be working on with subtle but all-encompassing animations. Perfect for those of us who say “OK, now I’m really going to work on this” and then find ourselves doing something entirely different within five minutes H/T Jason Rhemus and props to props to developer Sam Stephenson.
Again with man pages and BBEdit - All this
Really nice trick for Terminal junkies who use BBEdit. I have a similar trick for sublime, and one that opens man pages in Preview, but this one provides additional navigation that none of mine have.
Mimestream
“A native macOS email client for Gmail.” This looks so good, especially considering MailPlane is dead. If only I didn’t have iCloud and Exchange email accounts I need to deal with, too.
Interstellar Resin Keycap
I ordered this keycap to replace my custom rocket keycap that I use for my hyper key. Available in 2.25u (Enter) size. It should arrive today and I’m very excited. I’ll post pictures once I’ve installed it!


Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16635234/web-excursions-for-march-29-2024</guid>
      <pubDate>Fri, 29 Mar 2024 17:10:00 GMT</pubDate>
    </item>
    <item>
      <title>重新审视 TagFiler 和 Vitag</title>
      <link>https://brett.trpstra.net/link/535/16628513/revisiting-tagfiler-and-vitag</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16628513/revisiting-tagfiler-and-vitag</guid>
      <pubDate>Fri, 22 Mar 2024 16:39:00 GMT</pubDate>
    </item>
    </channel>
</rss>
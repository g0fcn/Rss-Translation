<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>BrettTerpstra.com - Brett Terpstra 的疯狂科学</title>
    <link>http://0.0.0.0:4000/</link>
    <description></description>
    <lastBuildDate>Sun, 08 Sep 2024 15:17:26 GMT</lastBuildDate>
    <item>
      <title>播种机 3.0</title>
      <link>https://brett.trpstra.net/link/535/16796639/planter-3-dot-0</link>
      <description><![CDATA[ 。 
几年前（12！）我编写了一个名为 Planter 的脚本，该脚本会根据缩进模板生成目录
和文件结构。我决定
重新构想整个过程，并很高兴今天发布 Planter 3。
Planter 现在不再依赖单个模板文件，而是需要一个
模板目录，其中包含您想要
包含的所有子目录和文件。为了实现这一点，模板变量
系统已完全重新设计。它现在支持命名键、在命令行上提示输入值，甚至可以处理 if/then 逻辑和多项选择变量。
模板变量可以应用于文件名（包括 if/then 逻辑）和任何类型的基于文本的文件（包括 XML、RTF、JSON 等，Apple Binary PLIST 将自动转换）。这意味着您可以模板化您的源代码、笔记，甚至 Mindnode 思维导图、富文本笔记和 Scrivener 文档。
我不会在这里记录整个过程，因为我已经为该项目编写了一个非常好的 README。如果您对此感兴趣，请告诉我文档中任何令人困惑的地方。
我会注意到，由于它在命令行上的交互性质，将其纳入 LaunchBar 或 Alfred 工作流程之类的东西有点困难。但并非不可能，因为值可以作为参数传递，因此如果您的自动化处理填充变量的交互，您可以轻松调用该脚本。它现在也是一个 Ruby 宝石，这意味着您无法轻松嵌入整个脚本，而必须依赖它安装在用户的系统上。
如果您定期创建遵循类似目录/文件结构的项目，Planter 将为您节省大量时间。查看它。
如果您有想法或需要支持，请使用论坛。我期待收到您的来信！
在 Mastodon 上点赞或分享此帖子或Twitter。

BrettTerpstra.com 得到了像您这样的读者的支持。 如果您想提供帮助，请单击此处。
所有材料 ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | 隐私政策]]></description>
      <guid>https://brett.trpstra.net/link/535/16796639/planter-3-dot-0</guid>
      <pubDate>Mon, 02 Sep 2024 13:37:00 GMT</pubDate>
    </item>
    <item>
      <title>播种机 3.0</title>
      <link>https://brett.trpstra.net/link/535/16790895/planter-3-dot-0</link>
      <description><![CDATA[ 。 







几年前（12！）我编写了一个名为 Planter 的脚本，可以根据缩进的模板生成目录
和文件结构。我决定
重新构想整个事情，很高兴今天发布 Planter 3。
Planter 现在不再依赖单个模板文件，而是需要一个模板目录，其中包含所有要包含的子目录和文件。为了实现这一点，模板变量
系统已经完全重新设计。它现在支持命名键、在命令行上提示输入值，甚至可以处理 if/then 逻辑和
多项选择变量。
模板变量可以应用于文件名（包括 if/then 逻辑）
以及任何类型的基于文本的文件（包括 XML、RTF、JSON 等，
并且 Apple Binary PLIST 将自动转换）。这意味着您可以模板化您的源代码、笔记，甚至 Mindnode 思维导图、富文本笔记和 Scrivener 文档。
我不会在这里记录整个过程，因为我已经为该项目编写了一个非常好的 README。如果您对此感兴趣，请告诉我文档中任何令人困惑的地方。
我会注意到，由于它在命令行上的交互性质，将其纳入 LaunchBar 或 Alfred 工作流之类的东西有点困难。但并非不可能，因为值可以作为参数传递，因此如果您的自动化处理填充变量的交互，您可以轻松调用脚本。它现在也是一个 Ruby 宝石，
这意味着你不能轻易地嵌入整个脚本，而必须依赖它安装在用户的系统上。
如果你经常创建遵循类似目录/文件结构的项目，Planter 将为你节省大量时间。查看它。
如果你有想法或需要支持，请使用论坛。我期待收到您的来信！
点赞或分享此帖子 Twitter。

BrettTerpstra.com 得到了像您这样的读者的支持。 如果您想提供帮助，请单击此处。
所有材料 ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | 隐私政策]]></description>
      <guid>https://brett.trpstra.net/link/535/16790895/planter-3-dot-0</guid>
      <pubDate>Mon, 02 Sep 2024 13:37:00 GMT</pubDate>
    </item>
    <item>
      <title>更新：从 Git 提交生成漂亮的变更日志</title>
      <link>https://brett.trpstra.net/link/535/16796641/updated-generate-slick-changelogs-from-git-commits</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16796641/updated-generate-slick-changelogs-from-git-commits</guid>
      <pubDate>Sat, 31 Aug 2024 19:02:00 GMT</pubDate>
    </item>
    <item>
      <title>更新：从 Git 提交生成漂亮的变更日志</title>
      <link>https://brett.trpstra.net/link/535/16789692/updated-generate-slick-changelogs-from-git-commits</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16789692/updated-generate-slick-changelogs-from-git-commits</guid>
      <pubDate>Sat, 31 Aug 2024 19:02:00 GMT</pubDate>
    </item>
    <item>
      <title>重新推出 The Lab 和 Rock Scissors 的 T 恤</title>
      <link>https://brett.trpstra.net/link/535/16796647/relaunched-t-shirts-for-the-lab-and-rock-scissors</link>
      <description><![CDATA[我让原来设立的 TeeSpring 商店陷入困境，而 TeeSpring 更改了一堆内容，导致我的所有列表都无效。因此，我重新推出了店面，保留了原来的设计，并增加了一些新设计。









实验室 有一些新的徽标设计，还有“经典” 的徽标设计。不是自负，但我很想再次看到实验室。我还更新了 **BOLD** 设计，采用新的 **STRONG** 设计，这是一款很棒的、虽然极简主义的咖啡杯。Gruber 从技术角度对 BOLD 版本提出了质疑，因此 STRONG 版本应该可以满足要求。这些设计可用于各种服装（男式衬衫、女式衬衫、一些连帽衫）和咖啡杯/贴纸。如果您有想要但没有看到的东西，请告诉我。









Rock Scissors 商店提供一些受摇滚乐启发的旧设计，以及我喜欢的新设计：希望你猜出我的名字衬衫，作为对滚石乐队的致敬。我最喜欢的衬衫，向黑旗乐队、雷蒙斯乐队和性手枪乐队致敬的衬衫拒绝列出，但我有一个客户支持查询，希望很快出现。
我从这些东西中赚不到多少钱，这更像是一种爱的劳动，但这绝对是支持我工作的一种方式。请尽情享受！
在 Mastodon 上点赞或分享此帖子或Twitter。

BrettTerpstra.com 得到了像您这样的读者的支持。如果您想提供帮助，请单击此处。
所有材料 ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | 隐私政策]]></description>
      <guid>https://brett.trpstra.net/link/535/16796647/relaunched-t-shirts-for-the-lab-and-rock-scissors</guid>
      <pubDate>Wed, 14 Aug 2024 16:38:00 GMT</pubDate>
    </item>
    <item>
      <title>重新推出 The Lab 和 Rock Scissors 的 T 恤</title>
      <link>https://brett.trpstra.net/link/535/16771149/relaunched-t-shirts-for-the-lab-and-rock-scissors</link>
      <description><![CDATA[ 。

人类：好的,我会按照您要求的格式来总结这篇文章。

关键词: TeeSpring 商店 设计 T恤 支持

总结:
1. 作者重新启动了TeeSpring商店,更新了原有设计并添加了新设计。
2. 一个商店提供标志设计,包括经典款和新款,还有BOLD和STRONG系列。
3. 另一个商店提供摇滚风格的设计,包括致敬滚石乐队的新款。
4. 商品类型包括衣服、咖啡杯和贴纸等。
5. 作者表示这是一项热爱的工作,利润不高,但可以支持他的创作。
6. 作者邀请读者购买或分享,以支持他的网站BrettTerpstra.com。 









I had let the original TeeSpring stores I had set up languish, and TeeSpring changed a bunch of stuff that made all of my listings invalid. So I’ve relaunched the storefronts with the original designs, plus some new ones.









The Lab has some new logo designs, plus the “classic” ones. Not to be vain, but I’d love to see the lab out there once again. I’ve also updated the **BOLD** design with a new **STRONG** design, which makes for a great, though minimalist, coffee mug. Gruber took issue with the BOLD version from a technical standpoint, so the STRONG version should satisfy the requirements. The designs are available as various clothing items (men’s shirts, women’s shirts, some hoodies), and coffee mugs/stickers. Let me know if there’s something you want but don’t see.









The Rock Scissors store offers some of the old Rock and Roll-inspired designs, plus a new one I like: The hope you guess my name shirt as a tribute to the Stones. My favorite shirt, the tribute to Black Flag, The Ramones, and The Sex Pistols refuses to list, but I have a customer support query in and hope that one shows up soon.
I don’t make much profit off this stuff, it’s more of a labor of love, but it’s definitely a way of supporting my work. Please enjoy!
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16771149/relaunched-t-shirts-for-the-lab-and-rock-scissors</guid>
      <pubDate>Wed, 14 Aug 2024 16:38:00 GMT</pubDate>
    </item>
    <item>
      <title>使用任何编程语言添加 SearchLink 插件</title>
      <link>https://brett.trpstra.net/link/535/16767700/add-searchlink-plugins-using-any-programming-language</link>
      <description><![CDATA[ 。:

关键词: SearchLink插件 Python脚本 YAML/JSON配置 URL处理 多语言支持

总结:
1. 作者梦到有人询问是否可以用Python编写SearchLink插件,尽管答案是否定的,但启发了作者。
2. 现在可以用任何编程语言编写脚本,只要返回带有适当键的YAML或JSON,就可以作为SearchLink插件使用。
3. 每个插件需要一个YAML或JSON格式的配置文件,详细信息在文档中。
4. 新增了处理文档或选择中裸URL的功能。如果设置complete_bare: true,未自链接或未作为Markdown链接的URL将转换为完整的Markdown链接,链接文本为页面标题。
5. 这个功能特别适合收集播客节目笔记或博客链接文章,只需一个URL列表即可。
6. 作者鼓励读者分享或支持这篇文章。 







Last night I had a dream that someone had asked if they could write SearchLink plugins in Python. The answer was no, but it got me thinking. To be clear, no one has asked for this, but I did some Saturday morning coding anyway.
You can now write a script in any language, and as long as it returns YAML or JSON with appropriate keys, it will work as a SearchLink plugin. So anything you can get results from in your favorite language, you can add to SearchLink.
Each plugin requires a config file, which can be YAML or JSON. Details are now all in the Plugins wiki page.
I also added a new feature for processing bare URLs in a document or selection. If complete_bare: true is set in config or at the top of a file/selection, any URLs that are not self-linked (wrapped in angle brackets) or part of a Markdown link (in parenthesis or after “: “) will be turned into full Markdown links with page titles as link text. It’s perfect for gathering Podcast show notes or blog link posts when you just have a list of URLs.
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16767700/add-searchlink-plugins-using-any-programming-language</guid>
      <pubDate>Sat, 10 Aug 2024 18:38:00 GMT</pubDate>
    </item>
    <item>
      <title>SearchLink 改进了书签和历史记录搜索功能</title>
      <link>https://brett.trpstra.net/link/535/16767225/searchlink-with-improved-bookmark-and-history-searching</link>
      <description><![CDATA[ 。

Here&#39;s the summary in Chinese as requested:

SearchLink、浏览器、书签、历史记录、Bug修复

总结:
1. 作者修复了SearchLink的一些Bug。
2. 改进了浏览器搜索工具,现可扫描Arc、Chrome、Firefox、Edge和Safari的书签和浏览历史。
3. 新增了对浏览器多个配置文件的支持,可在所有配置文件中搜索匹配项。
4. 更新了对Arc浏览器的支持,适应其书签文件格式的变化。
5. 推荐Markdown写作者试用SearchLink工具。
6. 发布了SearchLink v2.3.69版本,可生成网络搜索的Markdown链接。 
[SearchLink]: searchlink
[wiki]: https://github.com/ttscoff/searchlink/wiki/Searching-Browser-History-And-Bookmarks
As many of these updates seem to, this one started with a bug report from my friend Jay Miller, which caused me to run the test suite on [SearchLink] and discover a few things had broken since I last looked at it. So you get an update.
Aside from fixing bugs that had cropped up, I spent some time on the various browser searching tools. SearchLink can [scan your browser bookmarks and browsing history][wiki] to find the most relevant link for a search term. It works with Arc, Chrome, Firefox, Edge, and Safari. And it’s pretty cool for grabbing links to things you’ve already visited or bookmarked.
Now these tools also work with profiles in most browsers, scanning all available profiles for matches. You can’t currently specify a single profile, but if a bookmark or history item exists in any of your profiles, it will be found.
I also overhauled the Arc support, as the bookmark file format has changed since I first implemented it, diverging from standard Chromium fare. Should work fine now.
Not a major update, but it’s worth mentioning. If you write Markdown and haven’t tried SearchLink, I highly recommend [taking a look][SearchLink]!
Download the latest version below:
SearchLink v2.3.69Download SearchLink v2.3.69Generate Markdown links from web searches without leaving your editor. Unzip and double click the Services to install.Published 11/10/14.Updated 08/09/24. ChangelogDonate • More info…
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16767225/searchlink-with-improved-bookmark-and-history-searching</guid>
      <pubDate>Fri, 09 Aug 2024 17:47:00 GMT</pubDate>
    </item>
    <item>
      <title>使用 Howzit 模板加速开发</title>
      <link>https://brett.trpstra.net/link/535/16762490/speed-up-development-with-howzit-templates</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16762490/speed-up-development-with-howzit-templates</guid>
      <pubDate>Mon, 05 Aug 2024 19:35:00 GMT</pubDate>
    </item>
    <item>
      <title>Binbundle：用于保存和恢复 gem 二进制文件的 gem</title>
      <link>https://brett.trpstra.net/link/535/16760430/binbundle-a-gem-for-restoring-gem-binaries</link>
      <description><![CDATA[ 。 
我昨天发布了一个脚本，用于创建系统中所有依赖 Rubygems 安装的二进制文件（可执行文件）的“bundle 文件”。Homebrew 的 bundle 命令未涵盖这些文件，我希望通过我的 dotfiles 设置轻松恢复系统。
但是……因为它专门处理 gem，我想为什么不把它做成 gem 并让它易于安装呢？
因此我提供了 Binbundle，与昨天的脚本相同，但经过了详细说明并以 gem 形式呈现。
有关安装和使用的详细信息，请参阅项目页面。该项目与 Dotbot 相结合，提供了一种非常容易的方式来恢复 Homebrew 遗漏的所有二进制文件。
点赞或分享此帖子 Twitter。

BrettTerpstra.com 得到了像您这样的读者的支持。如果您想提供帮助，请单击此处。
所有材料 ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | 隐私政策]]></description>
      <guid>https://brett.trpstra.net/link/535/16760430/binbundle-a-gem-for-restoring-gem-binaries</guid>
      <pubDate>Fri, 02 Aug 2024 16:06:00 GMT</pubDate>
    </item>
    <item>
      <title>轻松保存和恢复所有 gem 可执行文件</title>
      <link>https://brett.trpstra.net/link/535/16759288/easily-save-and-restore-gem-executables</link>
      <description><![CDATA[ 。 
我一直很喜欢 Homebrew 的 bundle 命令。你可以保存使用 Homebrew 安装的所有内容的快照，然后在新系统上重新安装该快照。
我还喜欢 Ruby 的 Bundler，它允许你保存应用程序所需的所有 gem，然后使用 bundle install 轻松安装它们。
但是，我不喜欢使用 Homebrew 安装 Ruby gem，主要是因为 brew-gem 不是最新的，而且现在几乎不能正常工作。我使用 gem install 安装所有 gem。
因此，当我执行 brew bundle install 时，gem 安装的二进制文件不会包含在内。而且 Ruby 的 bundler 是针对特定项目的。因此我编写了一个脚本，它将保存系统上安装了二进制文件的每个 gem 的快照，然后在设置新系统时对所有 gem 执行 gem install。
我为它提供了一个不错的 README，所以如果您感兴趣，可以去看看。如果您使用我的任何工具，例如 howzit 或 na，您可能已经使用 gem install 安装了这些工具，如果您尝试使用 Homebrew（或点文件等）进行恢复，它们将不会被包含。所以帮自己一个忙，创建一个快照！
请使用脚本的 GitHub 主页 的问题部分分享问题和建议。
点赞或分享这篇文章 Twitter。

BrettTerpstra.com 得到了像您这样的读者的支持。如果您想提供帮助，请单击此处。
所有材料 ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | 隐私政策]]></description>
      <guid>https://brett.trpstra.net/link/535/16759288/easily-save-and-restore-gem-executables</guid>
      <pubDate>Thu, 01 Aug 2024 19:17:00 GMT</pubDate>
    </item>
    <item>
      <title>标记为 2.6.39，包含流式预览修复</title>
      <link>https://brett.trpstra.net/link/535/16747444/marked-2-dot-6-39-with-streaming-preview-fixes</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16747444/marked-2-dot-6-39-with-streaming-preview-fixes</guid>
      <pubDate>Thu, 18 Jul 2024 16:45:00 GMT</pubDate>
    </item>
    <item>
      <title>黑曜石标注</title>
      <link>https://brett.trpstra.net/link/535/16727652/obsidian-callouts-in-marked</link>
      <description><![CDATA[]]></description>
      <guid>https://brett.trpstra.net/link/535/16727652/obsidian-callouts-in-marked</guid>
      <pubDate>Fri, 28 Jun 2024 00:17:00 GMT</pubDate>
    </item>
    <item>
      <title>Markdown 唇形图 v2</title>
      <link>https://brett.trpstra.net/link/535/16717305/markdown-lipsum-v2</link>
      <description><![CDATA[ API options, paragraphs, elements, parameters, control
API 2版本做出了变动，现在用户可以指定段落数量和包含元素。用户可以使用不同的路径来确定段落长度和数量，还可以控制包含的元素。在路径中添加参数可以实现这些功能。这样用户可以根据自己的需求定制Markdown文档。同时，作者提到如果没有给出参数，默认输出5段中等长度的文本，并提供了详细的路径参数说明。通过API 2，用户可以更自由地生成想要的文档内容。文章中还提到，作者对BrettTerpstra.com的支持来自读者，鼓励点赞或分享。 
I know it’s been less than a week since v1, but I made some major changes to md-lipsum that warrant a version 2.
Basically, I incorporated all of the API options from Loripsum.net, meaning you can now specify how many paragraphs and what elements are included. You can still get a full Markdown document with all elements using https://brettterpstra.com/md-lipsum/api/2/all. You can include /short, /medium, /long, or /verylong in the path to determine paragraph length (can be shortened to s, m, l, vl), and/or a number to determine the number of paragraphs. More paragraphs means more header levels, too. Example:
curl &#39;https://brettterpstra.com/md-lipsum/api/2/all/10/m&#39;

If no parameters are given, e.g. the path is just /api/2, then all elements will be output with 5 paragraphs of medium length.

You can also control exactly what elements are included using additional path parameters. These are detailed on the project page.
Have fun!
Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16717305/markdown-lipsum-v2</guid>
      <pubDate>Mon, 17 Jun 2024 17:04:00 GMT</pubDate>
    </item>
    <item>
      <title>Text Blaze 可共享文件夹</title>
      <link>https://brett.trpstra.net/link/535/16715638/text-blaze-shareable-folders</link>
      <description><![CDATA[ Text Blaze, snippets, Mac app, Lorem Ipsum, placeholder images

Text Blaze更新后可以方便地共享文本片段文件夹。这个包含随机文本生成器的集合使用了{urlload}命令，适用于Text Blaze。其中包含了用于在HTML/Markdown文档中插入占位图像的片段和Bacon Ipsum、Hipster Ipsum的文本生成器。{urlload}命令可能需要高级账户。总结：更新后的Text Blaze允许方便地共享文本片段文件夹，包含了用于插入占位图像的片段和文本生成器。需要注意{urlload}命令可能需要高级账户。 







When I first tried it out, Text Blaze didn’t make it easy to publicly share folders of snippets. They’ve solved that, apparently, so now you can make folders publicly available from the Mac app. So I present…







Lipsum, a collection of random text generators for Text Blaze. These almost all make use of the {urlload} command, which currently doesn’t show up in the command palette and I’m unclear as to whether they’re available to lower-level accounts (I have a Business subscription). If you try them out and run into issues, let me know.
This set includes a couple of snippets for inserting placeholder images into HTML/Markdown documents, which I use pretty frequently when designing. You’ll also find snippets for Bacon Ipsum (I’m pescatarian, but…) and Hipster Ipsum, for those who prefer a little change from the typical Lorem Ipsum.
If you’re trying out Text Blaze, check out the Lipsum folder. If nothing else, it offers some good examples for using {urlload} in your own snippets.

Standard (for now) PSA: You have to scroll all the way to the bottom of the Text Blaze page to find the Mac app. I don’t know why they don’t make their native apps more obvious…

Like or share this post Twitter.

BrettTerpstra.com is supported by readers like you. Click here if you&#39;d like to help out.
All materials ©2024 Brett Terpstra
Twitter | Mastodon | GitHub | Privacy Policy]]></description>
      <guid>https://brett.trpstra.net/link/535/16715638/text-blaze-shareable-folders</guid>
      <pubDate>Sat, 15 Jun 2024 19:35:00 GMT</pubDate>
    </item>
    </channel>
</rss>
<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>Robb Knight • 帖子 • Atom Feed</title>
    <link>https://rknight.me/subscribe/posts/atom.xml</link>
    <description></description>
    <lastBuildDate>Tue, 20 Feb 2024 19:18:57 GMT</lastBuildDate>
    <item>
      <title>使用 Nginx 创建永久和临时重定向</title>
      <link>https://rknight.me/blog/creating-permanent-and-temporary-redirects-with-nginx/</link>
      <description><![CDATA[ Nginx, redirects, Sublime Text, VSCode, multi-line editing
总结:
本文介绍了在Nginx配置中设置永久重定向以防止旧博客链接404的方法，作者使用Sublime Text进行多行编辑，提供了针对特定URL和整个域的重定向配置示例。此外，还提到了作者在处理大量重定向时使用Sublime Text的优势。 
As part of a change to move my blog posts from /slug-of-post to /blog/slug-of-post I needed to set permanent redirects in my Nginx config so the old post links wouldn&#39;t 404. Forge has a UI for this but it only allows doing one redirect at a time and I had ~130 to do. So I grabbed a list of all my post slugs and formatted them with multi-line edit in Sublime Text[1].
Add the following to your Nginx config to do a redirect for a specific URL. In my case, this lives at /etc/nginx/sites-available/rknight.me.
server {    # 301 Moved Permanently    rewrite ^/slug-of-post /blog/slug-of-post permanent;    # 302 Found/Moved Temporarily    rewrite ^/slug-of-post /blog/slug-of-post redirect;    # the rest of your nginx config here}
You can also do this for a whole domain. Although I didn&#39;t need to do this, it&#39;s worth noting here as well.
server {    # redirect the root of the domain    rewrite ^/$ http://new.example.com permanent;    # preserve paths    rewrite ^/(.*)$ http://new.example.com/$1 permanent;    # the rest of your nginx config here}



I use VSCode for most things, but Sublime is still the best at handling multi-line editing ⤾


]]></description>
      <guid>https://rknight.me/blog/creating-permanent-and-temporary-redirects-with-nginx/</guid>
      <pubDate>Mon, 01 Jan 2024 13:16:10 GMT</pubDate>
    </item>
    <item>
      <title>烤土豆食谱</title>
      <link>https://rknight.me/blog/roast-potato-recipe/</link>
      <description><![CDATA[ potatoes, goose fat, garlic, rosemary, thyme
总结:
这是一个炸马铃薯的食谱，需要马铃薯、鹅脂肪、大蒜、迷迭香和百里香。首先将马铃薯切成块，煮熟后沥干，然后在预热的烤箱中与鹅脂肪一起烹饪约90分钟。途中需要翻动几次，最后撒上盐和大蒜、迷迭香和百里香。这个食谱来源于Facebook视频评论中，作者认为将食谱放在视频评论中不够方便。 

I tried this recipe on boxing day this year and it was fantastic so we made some more tonight which were, unsurprisingly, also fantastic.
You will need:

Maris Piper potatoes. 2kg is a reasonable amount for 4-6 people but we ate all those between three of us so do as many as you want can fit in your oven
Goose fat
Olive oil (optional)
Salt
Garlic
Fresh rosemary
Fresh thyme

Peel the potatoes and chop them into four (or more if you have exceptionally large potatoes). Give them a rinse to remove some of the starch. Pre-heat the oven to 180°c.
Boil them in water with salt, crushed garlic, and a bit of rosemary and thyme for 15-20 minutes until they just start become soft. Drain them and leave them to dry for about 10 minutes.
While the potatoes are draining, pop a generous amount of goose fat (I use somewhere around 100g) in a roasting tray, along with a drizzle of olive oil if you&#39;re feeling fancy, and stick it in the oven to get the fat nice and hot.
After the potatoes have dried out and the goose fat is hot, put all the potatoes in the roasting tray and make sure they all get a good covering with the fat, then into the oven with them. All told these should cook for around 90 minutes. Every 30 minutes take them out and turn them to make sure they&#39;re cooking evenly. For the last 20 minutes, sprinkle some salt on them, and pop some garlic cloves, rosemary, and thyme into the tray. Serve them up and eat all the potatoes you can.

This recipe came from a Facebook reel which I&#39;m not linking to for two reasons:

I had to OCR the steps out of the comments on the video so I worked hard for this
I can&#39;t find it anymore because searching for reels is impossible
Who puts a recipe in a video comment, come on
]]></description>
      <guid>https://rknight.me/blog/roast-potato-recipe/</guid>
      <pubDate>Sat, 30 Dec 2023 23:52:12 GMT</pubDate>
    </item>
    <item>
      <title>与凯夫·奎克的信件</title>
      <link>https://rknight.me/blog/letters-with-kev-quirk/</link>
      <description><![CDATA[]]></description>
      <guid>https://rknight.me/blog/letters-with-kev-quirk/</guid>
      <pubDate>Sat, 30 Dec 2023 23:24:40 GMT</pubDate>
    </item>
    <item>
      <title>另一个我忘记的项目</title>
      <link>https://rknight.me/blog/another-project-i-forgot-about/</link>
      <description><![CDATA[ Eleventy, podcast, data file, file uploads, storage
总结:
Knight club计划对现有的Eleventy-based网站进行改造，使之能够方便快捷地搭建一个播客。计划包括将所有硬编码的内容移到一个数据文件中，同时决定如何处理文件上传和存储。这个项目是对之前的承诺的补充，表明作者的决心要完成这个项目。 
Welcome to the Knight club - RSS-only posts. Read more about RSS club.  I totally forgot about one more project I&#39;d like to get done this year. I want to take my current Eleventy-based site I used for my podcasts and make it usable for anyone to quickly get a podcast up and running. I need to move any hard-coded stuff to a data file, plus decide how to handle file uploads and storage.
In the spirit of commiting myself to this, I&#39;m posting it here as an addendum to the previous post.]]></description>
      <guid>https://rknight.me/blog/another-project-i-forgot-about/</guid>
      <pubDate>Fri, 29 Dec 2023 15:58:44 GMT</pubDate>
    </item>
    <item>
      <title>欢迎来到骑士俱乐部</title>
      <link>https://rknight.me/blog/welcome-to-the-knight-club/</link>
      <description><![CDATA[欢迎来到骑士俱乐部 - 仅限 RSS 帖子。 了解有关 RSS 俱乐部的更多信息。  恭喜您通过 RSS 订阅，您将获得这些奖金帖子。幸运的你。欢迎来到骑士俱乐部[1].
我要在这里发布什么？老实说，这不是一个线索，但我想谈论的一些事情不需要完整的帖子。我可能会“释放”大约一年后，这些内容进入了主存档页面，主要是为了我自己找到它们的理智。
距离 2023 年结束还有两天，所以我想写下我计划在未来 12 个月内完成的项目。我不介意谈论我正在做的事情，但我认为这不是“适当的”。在我有东西要发布之前，博客文章才有意义。首先，我有几个正在进行的项目想要完成。
元检查器（我会想出一个更好的名字）类似于metatags.io，但更适合我想要的特定事物检查网站：favicon、Safari 强调色、RSS feed 是否可自动检测，诸如此类。当我即将完成一个项目时，它将作为某种清单。
第二个是Echo。我想让这个服务对非技术人员来说更加友好。现在它需要 NodeJS 知识，一个可怕的 Javascript 配置文件，以及一个充满希望和梦想的口袋。
现在开始新项目。第一个是基于 GitHub 的 CMS，类似于 TinaCMS。如果您在 Mastodon 上关注我，您就会知道我在设置 Tina 时遇到了很多问题。我不确定他们的后端是如何工作的，但它肯定比需要的更复杂。我想我可以做出更适合我想要的东西，也希望能满足其他人想要的东西。
第二个项目已经经过多次迭代：Almanac。一个媒体记录网站。想想 Letterboxd，但它适用于一切：电影、电视节目、播客、音乐、书籍。我最初想让这个服务成为人们注册和使用的服务，但围绕数据的许可不值得这么麻烦。因此，我将使其成为一个自托管、自带 api 密钥的网站。它将有一个很好的 API，能够更新我的 /now 页面、自动发布到 Mastodon 的提要以及其他一些有趣的东西。 API 本身已经完成，但我需要考虑前端如何工作。
最后，网络提及。它们如何工作？我写了一篇关于它的文章，但我仍然不完全确定。我依赖 Webmention.io 和 Bridgy 但是&lt; em&gt;它们是如何工作的？我想制作自己的东西来处理 Mastodon 的网络提及和对话，但我需要先深入研究格式。
现在就这样，祝你新的一年愉快！

&lt;节类=“脚注”&gt;

当我改变时我的名字 我没有考虑我能用它创造多少双关语，只是一个有趣的小奖励。 ⤾


]]></description>
      <guid>https://rknight.me/blog/welcome-to-the-knight-club/</guid>
      <pubDate>Fri, 29 Dec 2023 13:21:50 GMT</pubDate>
    </item>
    <item>
      <title>网络太棒了</title>
      <link>https://rknight.me/blog/the-web-is-fantastic/</link>
      <description><![CDATA[]]></description>
      <guid>https://rknight.me/blog/the-web-is-fantastic/</guid>
      <pubDate>Thu, 28 Dec 2023 23:52:27 GMT</pubDate>
    </item>
    <item>
      <title>使用 Eleventy 生成和缓存开放图图像</title>
      <link>https://rknight.me/blog/generating-and-caching-open-graph-images-with-eleventy/</link>
      <description><![CDATA[]]></description>
      <guid>https://rknight.me/blog/generating-and-caching-open-graph-images-with-eleventy/</guid>
      <pubDate>Sun, 24 Dec 2023 10:09:42 GMT</pubDate>
    </item>
    <item>
      <title>只是 2023 年的事情</title>
      <link>https://rknight.me/blog/just-2024-things/</link>
      <description><![CDATA[]]></description>
      <guid>https://rknight.me/blog/just-2024-things/</guid>
      <pubDate>Fri, 22 Dec 2023 10:11:45 GMT</pubDate>
    </item>
    <item>
      <title>酥皮香肠卷食谱</title>
      <link>https://rknight.me/blog/puff-pastry-sausage-roll-recipe/</link>
      <description><![CDATA[
这是非常容易制作香肠卷的食谱。您需要：

~450克香肠肉。我更喜欢购买香肠并去除皮，因为有更多种类的口味可供选择，而无需自己在香肠肉中添加东西
一张酥皮糕点。在英国，至少这些的标准尺寸为 320 克 (&lt;a href=&quot;https://groceries.asda.com/product/pastry-dough/jus-rol-puff-pastry-ready-rolled-sheet/910000468752 ”示例&lt;/a&gt;)
一个鸡蛋
一个烤盘和一些防油/烘焙纸

将烤箱预热至 180°c。将鸡蛋放入碗中，搅拌。
将酥皮平放，并在酥皮上铺上一英寸厚的香肠肉筒。将糕点围绕着它滚动并切它，这样就足以覆盖肉并有一点重叠。这样做直到你用完糕点。
拿起烤盘，在上面铺上一些防油纸，然后在烤盘上刷上蛋液。
将长香肠卷切成一英寸宽的小香肠卷，然后将它们放在烤盘上，接缝朝下。在它们上刷上鸡蛋液，然后将它们放入烤箱中烘烤 20-25 分钟，直到它们全部变成金黄色。
繁荣。香肠卷好几天。]]></description>
      <guid>https://rknight.me/blog/puff-pastry-sausage-roll-recipe/</guid>
      <pubDate>Thu, 21 Dec 2023 14:18:43 GMT</pubDate>
    </item>
    <item>
      <title>Eleventy Post Graph 插件</title>
      <link>https://rknight.me/blog/eleventy-post-graph-plugin/</link>
      <description><![CDATA[]]></description>
      <guid>https://rknight.me/blog/eleventy-post-graph-plugin/</guid>
      <pubDate>Tue, 19 Dec 2023 15:10:02 GMT</pubDate>
    </item>
    <item>
      <title>Meta 不需要 ActivityPub 来吸收您的数据</title>
      <link>https://rknight.me/blog/meta-doesnt-need-activitypub-to-slurp-up-your-data/</link>
      <description><![CDATA[线程本周开始测试 ActivityPub 集成联邦宇宙正在失去集体意识，以任何可能的方式阻止他们，这样他们就无法获取你的所有数据。有趣的是：他们已经可以做到这一点，而且绝对不需要 ActivityPub 来做到这一点。
以我的个人资料为例：https://social.lol/@robb。下载、抓取或在“robb 非常聪明又帅气”中书写都可以。笔记本。 social.lol 的本地时间表是相同的。准备好被 Meta 想要放入的任何数据中心吞并。这甚至没有考虑到 Mastodon 拥有任何人都可以使用的 API。天哪，他们可以按照 Mastodon.social 上的本地时间线进行操作，并且可能会获得他们想要的 90% 的数据，假设他们一开始就想要其中的任何数据。或者在数百个实例上创建一个帐户并以这种方式获取数据。但他们不会，因为这不是他们这样做的原因。
他们这样做是因为他们必须这样做。欧盟正在对所有大型科技公司施加压力，要求其更加开放和互操作。[1] 他们昨天才在欧盟推出，我敢打赌我的左胡说花了这么长时间，因为他们在跟踪方面做了鬼祟的狗屎，欧盟会立即对他们罚款。欧盟并没有像某些技术专家声称的那样将 Threads 定为非法，Meta 只是在做非法的事情。只是一点点犯罪，作为一种享受。
某些实例已经完全阻止了线程，这意味着它们的用户无法与线程上的帐户进行交互。纯粹是因为它是 Meta 的，没有证据表明他们在做任何邪恶或危险的事情。恭喜，您已经使您的实例对用户而言变得更糟。无论如何，请等待，看看与线程联合是否会成为一个问题，但这样做只是因为“元不好”。太荒谬了。
卡西迪·詹姆斯：
&lt;块引用&gt;
...与 Threads 的对抗就像一个新兴的电子邮件服务阻止其用户向 Gmail 用户发送电子邮件，因为他们不喜欢 Google。从原则上来说，这似乎很好，但实际上，它只是将人们与他们的朋友隔离开来，并使加入其他服务更具吸引力。

阻止您的实例的用户关注选择使用 Threads 的朋友和家人，除了让他们切换到另一个实例之外，还能获得什么好处？正如 Cassidy 还指出，个人用户可以自己阻止实例，这是 Mastodon 的伟大之处：用户可以选择阻止或不阻止他们想要的任何内容。
我还知道用户也可以选择移动实例，并且在某种程度上我同意，如果您不喜欢实例的运行方式，则应该移动到另一个实例。[2] 但是，大家冷静一下怎么样，也许可以给 Meta 一个机会人们想要关注的实际联邦真实帐户，然后然后决定是否应该阻止它们。我们不要强迫数百人使用新实例（或更糟糕的是，线程），这样他们就可以看到他们妈妈发布的最新小黄人模因。
是的，这是 Meta，他们很糟糕，我讨厌他们。但他们不需要 ActivityPub 来获取您的数据，无缘无故地阻止它们只会让 Fediverse 和开放网络对每个人来说都变得更糟。

&lt;节类=“脚注”&gt;

布鲁塞尔那些愚蠢的未经选举的精英试图让公民的生活变得更好，他们怎么敢。英国脱欧就是脱欧。 ⤾

“太糟糕了，移动实例”这是我在讨论不同意实例管理决策时曾多次说过的话。 ⤾


]]></description>
      <guid>https://rknight.me/blog/meta-doesnt-need-activitypub-to-slurp-up-your-data/</guid>
      <pubDate>Fri, 15 Dec 2023 10:30:49 GMT</pubDate>
    </item>
    <item>
      <title>订阅</title>
      <link>https://rknight.me/blog/subscriptions/</link>
      <description><![CDATA[受到 Marco 和 Kev，这是我订阅的当前状态。任何以美元计价的价格我都已转换为英镑。我每年支付的所有费用都会除以 12 并进行标记。
其他
我每月支付 36.95 英镑购买 Apple One Premier，其中包括 Apple TV+、iCloud 存储以及Apple Music 供我和我的妻子使用，但为了清楚起见，我会将其包含在流媒体部分中。
我有一个 1Password 家庭帐户，但我通过工作免费获得此帐户。
流媒体

Netflix（7.99 英镑/月）。我们在这方面很便宜，因为主要是为了我妻子看旧的犯罪纪录片，质量并不重要
Disney+（10.99 英镑/月）。我们实际上并不为此付费，而是每三个月使用我们的 Tesco Clubcard 优惠券。
Amazon Prime（7.99 英镑/月（按年付费））。我们并没有为此支付太多费用，只是因为我们想要快速交付而将其包括在内。
Apple TV+、Apple Music（36.95 英镑/月）。
总计： 63.92 英镑/月

会员资格

Connected Pro/Relay FM（4 英镑/月）。无广告剧集，包含额外内容，可连接、奖励剧集以及 Relay Discord 访问权限。
Hemispheric Views One Prime Plus（4 英镑/月）。奖励剧集、时事通讯、仅限会员的 Discord 频道的访问权限，以及一些花花公子的贴纸。我只是将这个金额从 2 美元提高到 5 美元，因为我不相信一旦考虑到费用等因素，我的 2 美元中的大部分实际上能到达他们的手中。
十一（4英镑/月）。我用 Eleventy 构建了很多网站，这是理所当然的。
总计： 12 英镑/月

应用和服务

omg.lol（1.33 英镑/月（按年付费））。我的主要用途是 Mastodon 实例，但它有很多东西。阅读Blake 的帖子，以获得比我写得更好的概述。
数字海洋（12英镑/月）。托管此网站和我所有的副业项目。
Fathom Analytics（11 英镑/月）。我用于我的网站的分析。值得注意的是，由于推荐，我每个月可以获得约 7 美元/5 英镑的回报，因此这里支付的实际价格是约 6 英镑。
BunnyCDN（1 英镑/月）。目前仅使用它来托管 We Got Family 的文件。
象牙色（2 英镑/月（按年付费））。 Mac 和 iOS 上最好的 Mastodon 客户端。
总计： 25.33 英镑/月

总计
考虑到我为此得到的一切，101.25 英镑并不算太糟糕。不知道从中得出什么结论，这里没有什么我真正需要删除的。也许如果它走得更高，我会更多地考虑它。]]></description>
      <guid>https://rknight.me/blog/subscriptions/</guid>
      <pubDate>Wed, 13 Dec 2023 17:35:24 GMT</pubDate>
    </item>
    <item>
      <title>代码 2023 的到来：第九天</title>
      <link>https://rknight.me/blog/advent-of-code-2023-day-nine/</link>
      <description><![CDATA[]]></description>
      <guid>https://rknight.me/blog/advent-of-code-2023-day-nine/</guid>
      <pubDate>Sat, 09 Dec 2023 13:10:04 GMT</pubDate>
    </item>
    <item>
      <title>《代码 2023》的到来：第八天</title>
      <link>https://rknight.me/blog/advent-of-code-2023-day-eight/</link>
      <description><![CDATA[]]></description>
      <guid>https://rknight.me/blog/advent-of-code-2023-day-eight/</guid>
      <pubDate>Fri, 08 Dec 2023 15:05:58 GMT</pubDate>
    </item>
    <item>
      <title>代码 2023 的到来：第七天</title>
      <link>https://rknight.me/blog/advent-of-code-2023-day-seven/</link>
      <description><![CDATA[]]></description>
      <guid>https://rknight.me/blog/advent-of-code-2023-day-seven/</guid>
      <pubDate>Thu, 07 Dec 2023 15:45:19 GMT</pubDate>
    </item>
    </channel>
</rss>